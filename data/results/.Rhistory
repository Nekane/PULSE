quota1
catchMean(sp1)
catchMean(sp1)[1,,] <- pop1[1,as.character(yy-1),,] *q*wts[1,1,,1]
yy<-10
catchMean(sp1)[1,,] <- pop1[1,as.character(yy-1),,] *q*wts[1,1,,1]
catchMean(sp1)
cfracs1 <- sweep( pop1[-1,as.character(yy-1),,] ,c(1,3),  pop1[1:(max(ages)-1),as.character(yy-2),max(season),] , FUN="/")
cfracs2 <- sweep( pop1[-1,as.character(yy-2),,] ,c(1,3),  pop1[1:(max(ages)-1),as.character(yy-3),max(season),] , FUN="/")
cfracs <- (cfracs1 + cfracs2)/2
catchMean(sp1)[-1,,] <- sweep(cfracs,c(1,3),pop1[1:(max(ages)-1),as.character(yy-1),max(season),] ,FUN="*") *q
catchMean(sp1)[-1,,] <- sweep(catchMean(sp1)[-1,,],c(1,2), wts[-1,1,,1],FUN="*")
catchMean(sp2)[1,,] <- pop2[1,as.character(yy-1),,] *q*wts[1,1,,1]
cfracs1 <- sweep( pop2[-1,as.character(yy-1),,] ,c(1,3),  pop2[1:(max(ages)-1),as.character(yy-2),max(season),] , FUN="/")
cfracs2 <- sweep( pop2[-1,as.character(yy-2),,] ,c(1,3),  pop2[1:(max(ages)-1),as.character(yy-3),max(season),] , FUN="/")
cfracs <- (cfracs1 + cfracs2)/2
catchMean(sp2)[-1,,] <- sweep(cfracs,c(1,3),pop2[1:(max(ages)-1),as.character(yy-1),max(season),] ,FUN="*") *q
catchMean(sp2)[-1,,] <- sweep(catchMean(sp2)[-1,,],c(1,2), wts[-1,1,,1],FUN="*")
catchMean(sp1)
sum(catchMean(sp1))
load("~/Dropbox/BoB/MSE/Git/Nekane_MSE/complex model/1quota12seasons.RData")
View(dsvm_res_allyrs)
sum(catchMean(sp1)[,,1])
sum(catchMean(sp1)[,,2])
catchMean(sp1)[,,1]
catchMean(sp1)[,,1]*1919
sum(catchMean(sp1)[,,1]*1919)
sum(catchMean(sp1)[,,2]*2081)
catchMean(sp1)[,,2]*2081
sum(catchMean(sp1)[,,2]*2081)
load("~/Dropbox/BoB/MSE/Git/Nekane_MSE/complex model/1quota12seasons.RData")
quota1
quota1* SIMNUMBER
load("~/Dropbox/BoB/MSE/Git/Nekane_MSE/complex model/1quota12seasons.RData")
ylim=c(0,8000)
xlimYPR <- c(0,0.08)
par(par(no.readonly=TRUE))
par(oma=c(3,3,0,0),mar=c(3,3,2,2),mfrow=c(2,2))
plot(rowMeans(hr1[,pyrnoMP,]), type="b", ylim= xlimYPR,  xlab="Age", ylab = "Selectivity", panel.first=grid(col = "ivory3"), xaxt="n",las=1)
#rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col ="#CCCCCC")
#par(new=TRUE)
text(1,0.078, "Unconstrained", pos=4)
#lines(rowMeans(hr1[,pyrnoMP,]), type="b", ylim= xlimYPR)
lines(rowMeans(hr1[,pyrMP,]), type="b", ylim= xlimYPR, col="#808080")
text(1,max(rowMeans(hr1[,pyrMP,]))+0.01, "Constrained", pos=4)
axis(1, at = seq(1, 6, by = 1))
mtext("(a)", side=3, line = -1.3, adj = 0.96, font=2, cex = 1)
lot(rowMeans(hr2[,pyrnoMP,]), type="b", ylim= xlimYPR,  xlab="Age", ylab = "Selectivity", panel.first=grid(col = "ivory3"), xaxt="n",las=1)
#rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col ="darkseagreen3")
#par(new=TRUE)
text(1,0.078, "Unconstrained", pos=4)
#lines(rowMeans(hr2[,pyrnoMP,]), type="b", ylim= xlimYPR)
lines(rowMeans(hr2[,pyrMP,]), type="b", ylim=  xlimYPR, col="#808080")
text(1,max(rowMeans(hr2[,pyrMP,]))-0.02, "Constrained", pos=4)
axis(1, at = seq(1, 6, by = 1))
mtext("(b)",  side=3, line = -1.3, adj = 0.96, font=2, cex = 1)
ylim=c(0,8000)
xlimYPR <- c(0,0.08)
par(par(no.readonly=TRUE))
par(oma=c(3,3,0,0),mar=c(3,3,2,2),mfrow=c(2,2))
plot(rowMeans(hr1[,pyrnoMP,]), type="b", ylim= xlimYPR,  xlab="Age", ylab = "Selectivity", panel.first=grid(col = "ivory3"), xaxt="n",las=1)
#rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col ="#CCCCCC")
#par(new=TRUE)
text(1,0.078, "Unconstrained", pos=4)
#lines(rowMeans(hr1[,pyrnoMP,]), type="b", ylim= xlimYPR)
lines(rowMeans(hr1[,pyrMP,]), type="b", ylim= xlimYPR, col="#808080")
text(1,max(rowMeans(hr1[,pyrMP,]))+0.01, "Constrained", pos=4)
axis(1, at = seq(1, 6, by = 1))
mtext("(a)", side=3, line = -1.3, adj = 0.96, font=2, cex = 1)
plot(rowMeans(hr2[,pyrnoMP,]), type="b", ylim= xlimYPR,  xlab="Age", ylab = "Selectivity", panel.first=grid(col = "ivory3"), xaxt="n",las=1)
#rect(par("usr")[1], par("usr")[3], par("usr")[2], par("usr")[4], col ="darkseagreen3")
#par(new=TRUE)
text(1,0.078, "Unconstrained", pos=4)
#lines(rowMeans(hr2[,pyrnoMP,]), type="b", ylim= xlimYPR)
lines(rowMeans(hr2[,pyrMP,]), type="b", ylim=  xlimYPR, col="#808080")
text(1,max(rowMeans(hr2[,pyrMP,]))-0.02, "Constrained", pos=4)
axis(1, at = seq(1, 6, by = 1))
mtext("(b)",  side=3, line = -1.3, adj = 0.96, font=2, cex = 1)
plot(rowMeans(hr1[,pyrnoMP,]), type="b", ylim= xlimYPR,  xlab="Age", ylab = "Selectivity", panel.first=grid(col = "ivory3"), xaxt="n",las=1)
text(1,0.078, "Unconstrained", pos=4)
lines(rowMeans(hr1[,38,]), type="b", ylim= xlimYPR, col="#808080")
text(1,max(rowMeans(hr1[,38+0.01, "Constrained", pos=4)
axis(1, at = seq(1, 6, by = 1))
mtext("(c)", side=3, line = -1.3, adj = 0.96, font=2, cex = 1)
plot(rowMeans(hr2[,pyrnoMP,]), type="b", ylim= xlimYPR,  xlab="Age", ylab = "Selectivity", panel.first=grid(col = "ivory3"), xaxt="n",las=1)
text(1,0.078, "Unconstrained", pos=4)
lines(rowMeans(hr2[,38,]), type="b", ylim=  xlimYPR, col="#808080")
text(1,max(rowMeans(hr2[,38,]))+0.01, "Constrained", pos=4)
axis(1, at = seq(1, 6, by = 1))
mtext("(d)",  side=3, line = -1.3, adj = 0.96, font=2, cex = 1)
plot(rowMeans(hr2[,pyrnoMP,]), type="b", ylim= xlimYPR,  xlab="Age", ylab = "Selectivity", panel.first=grid(col = "ivory3"), xaxt="n",las=1)
text(1,0.078, "Unconstrained", pos=4)
lines(rowMeans(hr2[,48,]), type="b", ylim=  xlimYPR, col="#808080")
text(1,max(rowMeans(hr2[,48,]))+0.01, "Constrained", pos=4)
axis(1, at = seq(1, 6, by = 1))
mtext("(d)",  side=3, line = -1.3, adj = 0.96, font=2, cex = 1)
hr2
rowMeans(hr2[,38,])
rowMeans(hr1[,38,])
rowMeans(hr2[,18,])
rowMeans(hr2[,18,])/rowMeans(hr2[,38,])
rowMeans(hr2[,38,])/rowMeans(hr2[,18,])
load("/home/nekane/Desktop/MSEresults/1quota12seasons_65000.RData")
load("~/Dropbox/PULSE/Pulseproject/data/gamsol_final.rdata")
predcod <- expand.grid(sizeclass=1:5,area=as.factor(c(1:16)),week=1:52)
predcod
predcod <- cbind(predcod, gear="BT", lhp=log(2000), year=1974, yrwk=1, fishhour = 65)
predcod$yearwk <- (predcod$year - 1970)*52 + predcod$week             # vormt extra kolom!
predcod$data<-rep(NA,nrow(predcod))
pred_with_se   <- predict(gamcod,newdata=predcod,se=T) #get predicted value
load("~/Dropbox/PULSE/Pulseproject/data/gamsol_final.rdata")
predsol <- expand.grid(sizeclass=1:5,area=as.factor(c(1:16)),week=1:52)
predsol <- cbind(predsol, gear="BT", lhp=log(2000), year=1974, yrwk=1, fishhour= 65)
predsol$yearwk <- (predsol$year - 1970)*52 + predsol$week
predsol$data   <-rep(NA,nrow(predsol))
pred_with_se   <- predict(gamsol,newdata=predsol,se=T)
View(predsol)
library("mgcv", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
pred_with_se   <- predict(gamsol,newdata=predsol,se=T)
pnorm(150,0.8)
pnorm(30,150,0.8)
pnorm(25,150,0.008)
qnbinom(0.90, 150,0.008)/24
qnbinom(0.90, 150,0.008)
qnbinom(0.90, 150,0.008)/24
pnorm(27.4, mean=50, sd=20)
pnorm(10.4, mean=50, sd=20)
pnorm(1, mean=50, sd=20)
pnorm(50, mean=50, sd=20)
pnorm(100, mean=50, sd=20)
qnbinom(0.90, 10, 1/3)
qnbinom(0.90, 10, 1/2)
pnorm(100, mean=50, sd=20)
qnbinom(0.90, 50, 20)/99
qnbinom(0.90, 50, 20)
pnorm(27.4, mean=50, sd=20)
qnbinom(0.90, 50, 20)/26
qnbinom(0.10, 50, 20)/26
qnbinom(0.10, 150, 20)
rnorm(30,mean=1,sd=1.5)
qnbinom(0.90, mu= 1500, size= 1.3 / (30 - 1)
Q
qnbinom(0.90, mu= 1500, size= 1.3) / (30 - 1)
qnbinom(0.90, mu= 1, size= 1.5) / (30 - 1)
0.71+0.52/2
(0.71+0.52)/2
load("/run/user/1000/gvfs/sftp:host=10.88.8.194/home/alzor001/modelresults/twoareas52weeks.RData")
dsvm_res <-  extract_dsvm_res (z, control, 1:5, 1:52)
extract_dsvm_res <- function(z, control, ages, season){
detach("package:FLCore", unload=TRUE)
simNumber <-control@simNumber
sp        <- c("sp1","sp2","sp3","sp4","sp5")
dsvm_res             <- as.data.frame(rbind(as.matrix(spp1Landings(sim(z))),
as.matrix(spp2Landings(sim(z))),
as.matrix(spp3Landings(sim(z))),
as.matrix(spp4Landings(sim(z))),
as.matrix(spp5Landings(sim(z)))))
names(dsvm_res)      <- "landings.wt"
dsvm_res$discards.wt <- c(rbind(as.matrix(spp1Discards(sim(z))),
as.matrix(spp2Discards(sim(z))),
as.matrix(spp3Discards(sim(z))),
as.matrix(spp4Discards(sim(z))),
as.matrix(spp5Discards(sim(z)))))
dsvm_res$catch.wt    <- dsvm_res$ landings + dsvm_res$discards
dsvm_res$effort      <- rep(rep(as.matrix(effort(sim(z))),each=length(ages)),length(sp))
dsvm_res$option      <- rep(rep(as.matrix(choice(sim(z))),each=length(ages)),length(sp))
dsvm_res$spp         <- as.factor(c(rep(sp, each=(simNumber*length(ages)*length(season)))))
dsvm_res$cat         <- ages
dsvm_res$season      <- c(rep(season, each=simNumber*length(ages)))
dsvm_res$vessel      <- rep(1:simNumber,each=length(ages))
dsvm_res$option[is.na(dsvm_res$option)] <- "Stay in port"
dsvm_res[c(1:4)]     <- lapply(dsvm_res[c(1:4)], function(x) as.numeric(as.character(x)))
dsvm_res[c(5:9)]     <- lapply(dsvm_res[c(5:9)], function(x) as.factor(x))
is.num               <- sapply(dsvm_res, is.numeric)
dsvm_res[is.num]     <- lapply(dsvm_res[is.num], round, 6)
# Just focus on sp1 and sp2
dsvm_res             <- subset(dsvm_res,(spp %in% c("sp1", "sp2")))
trip                 <- count(dsvm_res,c("spp","cat","season","option"))
names(trip)[5]       <- "trip"
dsvm_res             <- aggregate(cbind(landings.wt, discards.wt, catch.wt, effort)~ spp+cat+season+option, FUN=sum, data=dsvm_res)
dsvm_res             <- merge(dsvm_res, trip, by=c("spp","cat", "season","option"),all.x=TRUE)
return(dsvm_res)
}
dsvm_res <-  extract_dsvm_res (z, control, 1:5, 1:52)
extract_dsvm_res <- function(z, control, ages, season){
simNumber <-control@simNumber
sp        <- c("sp1","sp2","sp3","sp4","sp5")
dsvm_res             <- as.data.frame(rbind(as.matrix(spp1Landings(sim(z))),
as.matrix(spp2Landings(sim(z))),
as.matrix(spp3Landings(sim(z))),
as.matrix(spp4Landings(sim(z))),
as.matrix(spp5Landings(sim(z)))))
names(dsvm_res)      <- "landings.wt"
dsvm_res$discards.wt <- c(rbind(as.matrix(spp1Discards(sim(z))),
as.matrix(spp2Discards(sim(z))),
as.matrix(spp3Discards(sim(z))),
as.matrix(spp4Discards(sim(z))),
as.matrix(spp5Discards(sim(z)))))
dsvm_res$catch.wt    <- dsvm_res$ landings + dsvm_res$discards
dsvm_res$effort      <- rep(rep(as.matrix(effort(sim(z))),each=length(ages)),length(sp))
dsvm_res$option      <- rep(rep(as.matrix(choice(sim(z))),each=length(ages)),length(sp))
dsvm_res$spp         <- as.factor(c(rep(sp, each=(simNumber*length(ages)*length(season)))))
dsvm_res$cat         <- ages
dsvm_res$season      <- c(rep(season, each=simNumber*length(ages)))
dsvm_res$vessel      <- rep(1:simNumber,each=length(ages))
dsvm_res$option[is.na(dsvm_res$option)] <- "Stay in port"
dsvm_res[c(1:4)]     <- lapply(dsvm_res[c(1:4)], function(x) as.numeric(as.character(x)))
dsvm_res[c(5:9)]     <- lapply(dsvm_res[c(5:9)], function(x) as.factor(x))
is.num               <- sapply(dsvm_res, is.numeric)
dsvm_res[is.num]     <- lapply(dsvm_res[is.num], round, 6)
# Just focus on sp1 and sp2
dsvm_res             <- subset(dsvm_res,(spp %in% c("sp1", "sp2")))
trip                 <- count(dsvm_res,c("spp","cat","season","option"))
names(trip)[5]       <- "trip"
dsvm_res             <- aggregate(cbind(landings.wt, discards.wt, catch.wt, effort)~ spp+cat+season+option, FUN=sum, data=dsvm_res)
dsvm_res             <- merge(dsvm_res, trip, by=c("spp","cat", "season","option"),all.x=TRUE)
return(dsvm_res)
}
dsvm_res <-  extract_dsvm_res (z, control, 1:5, 1:52)
control     <- DynState.control(spp1LndQuota= 160000,  spp2LndQuota=1000000, spp1LndQuotaFine= 320, spp2LndQuotaFine= 3e6, fuelUse = 1, fuelPrice = 1600, landingCosts= 0.24,gearMaintenance= 87, addNoFishing= TRUE, increments= 20, spp1DiscardSteps= 0, spp2DiscardSteps= 0, sigma= 1, simNumber= 1000 , numThreads= 40, verbose=1)
dsvm_res <-  extract_dsvm_res (z, control, 1:5, 1:52)
dsvm_res <-  extract_dsvm_res (z, control, 1:5, 1:52)
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
dsvm_res <-  extract_dsvm_res (z, control, 1:5, 1:52)
modeffort<- subset(dsvm_res, spp %in% "sp1")
modeffort<- subset(dsvm_res, cat %in% "1")
View(modeffort)
modeffort<- with(modeffort,data.frame(spp, cat, season, option, effort, trip))
View(modeffort)
aggregate(cbind(effort,trip)~ spp+cat+option+season, FUN=sum, data=effort)
aggregate(cbind(effort,trip)~ spp+cat+option+season, FUN=sum, data=modeffort)
modeffort<- subset(dsvm_res, spp %in% "sp1")
modeffort<- subset(dsvm_res, cat %in% "1")
modeffort<- subset(dsvm_res, spp %in% "sp1")
modeffort<- subset(modeffort, cat %in% "1")
aggregate(cbind(effort,trip)~ spp+cat+option+season, FUN=sum, data=modeffort)
library(scales)
ggplot(all_effort, aes(x=as.factor(season), y=trip, fill=choice)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
scale_fill_manual(values= c("gray100","gray60","gray20"))+
xlab("season") +
ylab("Fishing choice")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
ggplot(all_effort, aes(x=as.factor(season), y=trip, fill=choice)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
scale_fill_manual(values= c("gray100","gray60","gray20"))+
xlab("season") +
ylab("Fishing choice")
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=choice)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
scale_fill_manual(values= c("gray100","gray60","gray20"))+
xlab("season") +
ylab("Fishing choice")
View(modeffort)
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=options)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
scale_fill_manual(values= c("gray100","gray60","gray20"))+
xlab("season") +
ylab("Fishing choice")
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=option)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
scale_fill_manual(values= c("gray100","gray60","gray20"))+
xlab("season") +
ylab("Fishing choice")
options(width=240)
library(RDynState5NAsigmaseason52Age5)
library(ggplot2)
library(reshape2)
library(FLCore)
library(plyr)
library(scales)
source("~/code/functions.R")
#Load all .csv files
#----------------------------------------------------------------------------------------
setwd("~/data/results")
temp <- list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
sp1<- sp2 <- sp3 <- sp4 <- sp5 <-    new("DynStateInput")
# gample$family$getTheta() for Plaice in Jurgens GAMs is 1.195788
# gamsol$family$getTheta() for Sole in Jurgens GAMs is 1.637352
# gamcod$family$getTheta() for Cod in Jurgens GAMs is 0.8979249
# ---------------------
# ---------------------------------------------
# BEAM TRAWLS: LONG DISTANCE fleet
# --------------------------------------------
# ---------------------
#
sp1 <- cpue_dsvm_sp(sol_beam_large.csv, sp1, 1.637352)  #SOLE
sp2 <- cpue_dsvm_sp(ple_beam_large.csv, sp2, 1.195788)  #PLAICE
sp3 <- cpue_dsvm_sp(cod_beam_large.csv, sp3, 0.8979249) #COD
catchMean(sp4) <- catchMean(sp5) <- array(0.01,dim=dim(catchMean(sp2)),dimnames=dimnames(catchMean(sp2)))
catchSigma(sp4)<- catchSigma(sp5)<- array(0.0000001,dim=dim(catchMean(sp2)),dimnames=dimnames(catchMean(sp2)))
catchMean(sp4)
dim(catchMean(sp2)),
dim(catchMean(sp2))
setwd("~/Dropbox/PULSE/Pulse")
source("~/code/functions.R")
#----------------------------------------------------------------------------------------
# Rerun GAM prediction with updated catch efficiency parameters
#----------------------------------------------------------------------------------------
## PLAICE
#ple_beam_large<- cpue_dsvm_input("ple",1)
#ple_pulse_large<- cpue_dsvm_input("ple",1.28)
#ple_beam_small<- cpue_dsvm_input("ple",(1*0.282))
#ple_pulse_small<- cpue_dsvm_input("ple",(1.28*0.243))
## SOLE
#sol_beam_large<- cpue_dsvm_input("sol",1)
#sol_pulse_large<- cpue_dsvm_input("sol",0.6)
#sol_beam_small<- cpue_dsvm_input("sol",(1*0.282))
#sol_pulse_small<- cpue_dsvm_input("sol",(0.6*0.243))
## COD
#cod_beam_large<- cpue_dsvm_input("cod",1)
#cod_pulse_large<- cpue_dsvm_input("cod",0.6)
#cod_beam_small<- cpue_dsvm_input("cod",(1*0.282))
#cod_pulse_small<- cpue_dsvm_input("cod",(0.6*0.243))
## SHRIMP
#csh_beam_small<- cpue_dsvm_input("csh",1)
#setwd("~/Dropbox/PULSE/Pulseproject/data/results")
#files<- mget(ls())
#for (i in 1:length(files)) write.csv(files[[i]], paste(names(files[i]), ".csv", sep = ""))
#Load all .csv files
#----------------------------------------------------------------------------------------
setwd("~/data/results")
temp <- list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
sp1<- sp2 <- sp3 <- sp4 <- sp5 <-    new("DynStateInput")
# gample$family$getTheta() for Plaice in Jurgens GAMs is 1.195788
# gamsol$family$getTheta() for Sole in Jurgens GAMs is 1.637352
# gamcod$family$getTheta() for Cod in Jurgens GAMs is 0.8979249
# ---------------------
# ---------------------------------------------
# BEAM TRAWLS: LONG DISTANCE fleet
# --------------------------------------------
# ---------------------
#
sp1 <- cpue_dsvm_sp(sol_beam_large.csv, sp1, 1.637352)  #SOLE
sp2 <- cpue_dsvm_sp(ple_beam_large.csv, sp2, 1.195788)  #PLAICE
sp3 <- cpue_dsvm_sp(cod_beam_large.csv, sp3, 0.8979249) #COD
catchMean(sp4) <- catchMean(sp5) <- array(0.01,dim=dim(catchMean(sp2)),dimnames=dimnames(catchMean(sp2)))
catchSigma(sp4)<- catchSigma(sp5)<- array(0.0000001,dim=dim(catchMean(sp2)),dimnames=dimnames(catchMean(sp2)))
source("code/functions.R")
setwd("data/results")
temp <- list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
sp1<- sp2 <- sp3 <- sp4 <- sp5 <-    new("DynStateInput")
# gample$family$getTheta() for Plaice in Jurgens GAMs is 1.195788
# gamsol$family$getTheta() for Sole in Jurgens GAMs is 1.637352
# gamcod$family$getTheta() for Cod in Jurgens GAMs is 0.8979249
# ---------------------
# ---------------------------------------------
# BEAM TRAWLS: LONG DISTANCE fleet
# --------------------------------------------
# ---------------------
#
sp1 <- cpue_dsvm_sp(sol_beam_large.csv, sp1, 1.637352)  #SOLE
sp2 <- cpue_dsvm_sp(ple_beam_large.csv, sp2, 1.195788)  #PLAICE
sp3 <- cpue_dsvm_sp(cod_beam_large.csv, sp3, 0.8979249) #COD
catchMean(sp4) <- catchMean(sp5) <- array(0.01,dim=dim(catchMean(sp2)),dimnames=dimnames(catchMean(sp2)))
dim(catchMean(sp2))
control@sigma
control     <- DynState.control(spp1LndQuota= 160000,  spp2LndQuota=1000000, spp1LndQuotaFine= 320, spp2LndQuotaFine= 3e6, fuelUse = 1, fuelPrice = 1600, landingCosts= 0.24,gearMaintenance= 87, addNoFishing= TRUE, increments= 20, spp1DiscardSteps= 0, spp2DiscardSteps= 0, sigma= 1, simNumber= 1000 , numThreads= 40, verbose=1)
control@sigma
paste0("SIGMA ", control@sigma)
paste0("Beam_large_B160_south_",paste0("SIGMA ", control@sigma))
paste0("Beam_large_B160_south_",paste0("SIGMA", control@sigma))
paste0("Beam_large_B160_south_",paste0("Sigma", control@sigma))
load("/run/user/1000/gvfs/sftp:host=10.88.8.194/home/alzor001/modelresults/Beam_large_B160_south.RData")
extract_dsvm_res <- function(z, control, ages, season){
#detach("package:FLCore", unload=TRUE)
simNumber <-control@simNumber
sp        <- c("sp1","sp2","sp3","sp4","sp5")
dsvm_res             <- as.data.frame(rbind(as.matrix(spp1Landings(sim(z))),
as.matrix(spp2Landings(sim(z))),
as.matrix(spp3Landings(sim(z))),
as.matrix(spp4Landings(sim(z))),
as.matrix(spp5Landings(sim(z)))))
names(dsvm_res)      <- "landings.wt"
dsvm_res$discards.wt <- c(rbind(as.matrix(spp1Discards(sim(z))),
as.matrix(spp2Discards(sim(z))),
as.matrix(spp3Discards(sim(z))),
as.matrix(spp4Discards(sim(z))),
as.matrix(spp5Discards(sim(z)))))
dsvm_res$catch.wt    <- dsvm_res$ landings + dsvm_res$discards
dsvm_res$effort      <- rep(rep(as.matrix(effort(sim(z))),each=length(ages)),length(sp))
dsvm_res$option      <- rep(rep(as.matrix(choice(sim(z))),each=length(ages)),length(sp))
dsvm_res$spp         <- as.factor(c(rep(sp, each=(simNumber*length(ages)*length(season)))))
dsvm_res$cat         <- ages
dsvm_res$season      <- c(rep(season, each=simNumber*length(ages)))
dsvm_res$vessel      <- rep(1:simNumber,each=length(ages))
dsvm_res$option[is.na(dsvm_res$option)] <- "Stay in port"
dsvm_res[c(1:4)]     <- lapply(dsvm_res[c(1:4)], function(x) as.numeric(as.character(x)))
dsvm_res[c(5:9)]     <- lapply(dsvm_res[c(5:9)], function(x) as.factor(x))
is.num               <- sapply(dsvm_res, is.numeric)
dsvm_res[is.num]     <- lapply(dsvm_res[is.num], round, 6)
# Just focus on sp1 and sp2
dsvm_res             <- subset(dsvm_res,(spp %in% c("sp1", "sp2")))
trip                 <- count(dsvm_res,c("spp","cat","season","option"))
names(trip)[5]       <- "trip"
dsvm_res             <- aggregate(cbind(landings.wt, discards.wt, catch.wt, effort)~ spp+cat+season+option, FUN=sum, data=dsvm_res)
dsvm_res             <- merge(dsvm_res, trip, by=c("spp","cat", "season","option"),all.x=TRUE)
return(dsvm_res)
}
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
dsvm_res <-  extract_dsvm_res (z, control, 1:5, time)
detach("package:FLCore", unload=TRUE)
dsvm_res <-  extract_dsvm_res (z, control, 1:5, time)
dsvm_res <-  extract_dsvm_res (BS160, control, 1:5, time)
modeffort<- subset(dsvm_res, spp %in% "sp1")
modeffort<- subset(modeffort, cat %in% "1")
library(scales)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=option)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
scale_fill_manual(values= c("gray100","gray60","gray20"))+
xlab("season") +
ylab("Fishing choice")
modeffort
View(dsvm_res)
10^16
load("/run/user/1000/gvfs/sftp:host=10.88.8.194/home/alzor001/modelresults/Beam_large_B160_south.RData")
extract_dsvm_res <- function(z, control, ages, season){
#detach("package:FLCore", unload=TRUE)
simNumber <-control@simNumber
sp        <- c("sp1","sp2","sp3","sp4","sp5")
dsvm_res             <- as.data.frame(rbind(as.matrix(spp1Landings(sim(z))),
as.matrix(spp2Landings(sim(z))),
as.matrix(spp3Landings(sim(z))),
as.matrix(spp4Landings(sim(z))),
as.matrix(spp5Landings(sim(z)))))
names(dsvm_res)      <- "landings.wt"
dsvm_res$discards.wt <- c(rbind(as.matrix(spp1Discards(sim(z))),
as.matrix(spp2Discards(sim(z))),
as.matrix(spp3Discards(sim(z))),
as.matrix(spp4Discards(sim(z))),
as.matrix(spp5Discards(sim(z)))))
dsvm_res$catch.wt    <- dsvm_res$ landings + dsvm_res$discards
dsvm_res$effort      <- rep(rep(as.matrix(effort(sim(z))),each=length(ages)),length(sp))
dsvm_res$option      <- rep(rep(as.matrix(choice(sim(z))),each=length(ages)),length(sp))
dsvm_res$spp         <- as.factor(c(rep(sp, each=(simNumber*length(ages)*length(season)))))
dsvm_res$cat         <- ages
dsvm_res$season      <- c(rep(season, each=simNumber*length(ages)))
dsvm_res$vessel      <- rep(1:simNumber,each=length(ages))
dsvm_res$option[is.na(dsvm_res$option)] <- "Stay in port"
dsvm_res[c(1:4)]     <- lapply(dsvm_res[c(1:4)], function(x) as.numeric(as.character(x)))
dsvm_res[c(5:9)]     <- lapply(dsvm_res[c(5:9)], function(x) as.factor(x))
is.num               <- sapply(dsvm_res, is.numeric)
dsvm_res[is.num]     <- lapply(dsvm_res[is.num], round, 6)
# Just focus on sp1 and sp2
dsvm_res             <- subset(dsvm_res,(spp %in% c("sp1", "sp2")))
trip                 <- count(dsvm_res,c("spp","cat","season","option"))
names(trip)[5]       <- "trip"
dsvm_res             <- aggregate(cbind(landings.wt, discards.wt, catch.wt, effort)~ spp+cat+season+option, FUN=sum, data=dsvm_res)
dsvm_res             <- merge(dsvm_res, trip, by=c("spp","cat", "season","option"),all.x=TRUE)
return(dsvm_res)
}
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
dsvm_res <-  extract_dsvm_res (BS160, control, 1:5, time)
modeffort<- subset(dsvm_res, spp %in% "sp1")
modeffort<- subset(modeffort, cat %in% "1")
library(scales)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=option)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
scale_fill_manual(values= c("gray100","gray60","gray20"))+
xlab("season") +
ylab("Fishing choice")
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=option)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
scale_fill_grey(start = 0.2, end = 0.8, na.value = "red", aesthetics = "fill")+
xlab("season") +
ylab("Fishing choice")
View(modeffort)
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=option)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
scale_fill_gradient(low='white', high='grey20')+
xlab("season") +
ylab("Fishing choice")
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=option)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
xlab("season") +
ylab("Fishing choice")
load("/run/user/1000/gvfs/sftp:host=10.88.8.194/home/alzor001/modelresults/Beam_large_B160_south.RData")
dsvm_res <-  extract_dsvm_res (BS160, control, 1:5, time)
modeffort<- subset(dsvm_res, spp %in% "sp1")
modeffort<- subset(modeffort, cat %in% "1")
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=option)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
xlab("season") +
ylab("Fishing choice")
1/16
load("/run/user/1000/gvfs/sftp:host=10.88.8.194/home/alzor001/modelresults/Beam_large_B160_south.RData")
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
dsvm_res <-  extract_dsvm_res (BS160, control, 1:5, time)
modeffort<- subset(dsvm_res, spp %in% "sp1")
modeffort<- subset(modeffort, cat %in% "1")
library(scales)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
ggplot(modeffort, aes(x=as.factor(season), y=trip, fill=option)) +
geom_bar(stat="identity", position = "fill", colour="black")+
scale_y_continuous( labels = percent)+
xlab("season") +
ylab("Fishing choice")
